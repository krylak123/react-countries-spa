{"version":3,"sources":["helpers/request.js","store/GlobalStore.js","components/Card.js","components/Panel.js","pages/StartPage.js","pages/DetailPage.js","components/Content.js","components/Header.js","components/App.js","reportWebVitals.js","index.js"],"names":["request","axios","create","baseURL","AppContext","createContext","GlobalStore","children","useState","isDataLoading","setIsDataLoading","countries","setCountries","fetchData","a","get","data","useEffect","Provider","value","Card","flag","name","population","region","capital","alpha3Code","to","className","src","alt","React","memo","areEqual","Panel","inputValue","handleInput","selectValue","handleSelect","handleClear","icon","faSearch","type","onChange","placeholder","length","faTimes","onClick","hidden","StartPage","props","useContext","searchValue","setSearchValue","selectedFilter","setSelectedFilter","countriesList","filter","country","toLowerCase","match","countriesMap","map","e","target","DetailPage","domains","currencies","languages","borders","currentCountry","params","code","topLevelDomain","join","item","symbol","border","faArrowLeft","nativeName","subregion","Content","exact","path","component","Header","isDarkMode","setIsDarkMode","document","documentElement","setAttribute","prevValue","faMoon","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9dcea681.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst request = axios.create({\r\n  baseURL: 'https://restcountries.com/v2',\r\n});\r\n\r\nexport default request;\r\n","import React, { createContext, useEffect, useState } from 'react';\r\nimport request from '../helpers/request';\r\n\r\nexport const AppContext = createContext(null);\r\n\r\nconst GlobalStore = ({ children }) => {\r\n  const [isDataLoading, setIsDataLoading] = useState(true);\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  const fetchData = async () => {\r\n    const { data } = await request.get('/all');\r\n\r\n    setCountries(data);\r\n    setIsDataLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        isDataLoading,\r\n        countries,\r\n        setCountries,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GlobalStore;\r\n","import React, { areEqual } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Card = ({ flag, name, population, region, capital, alpha3Code }) => {\r\n    return (\r\n        <Link to={`/country/${alpha3Code}`} className='card__wrap'>\r\n            <article className='card'>\r\n                <div className='card__image-wrap'>\r\n                    <img\r\n                        src={flag}\r\n                        alt='country flag'\r\n                        className='card__image'\r\n                    />\r\n                </div>\r\n                <div className='card__details-wrap'>\r\n                    <h2 className='card__title'>{name}</h2>\r\n                    <p className='card__detail'>\r\n                        Population:\r\n                        <span className='card__detail-span'>{population}</span>\r\n                    </p>\r\n                    <p className='card__detail'>\r\n                        Region:\r\n                        <span className='card__detail-span'>{region}</span>\r\n                    </p>\r\n                    <p className='card__detail'>\r\n                        Capital:\r\n                        <span className='card__detail-span'>{capital}</span>\r\n                    </p>\r\n                </div>\r\n            </article>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default React.memo(Card, areEqual);\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Panel = ({\r\n    inputValue,\r\n    handleInput,\r\n    selectValue,\r\n    handleSelect,\r\n    handleClear,\r\n}) => {\r\n    return (\r\n        <div className='panel'>\r\n            <label className='panel__label'>\r\n                <FontAwesomeIcon\r\n                    className='panel__icon panel__icon--search'\r\n                    icon={faSearch}\r\n                />\r\n                <input\r\n                    type='text'\r\n                    className='panel__input'\r\n                    value={inputValue}\r\n                    onChange={handleInput}\r\n                    placeholder='Search for a country...'\r\n                />\r\n                <FontAwesomeIcon\r\n                    className={\r\n                        inputValue.length\r\n                            ? 'panel__icon panel__icon--clear active'\r\n                            : 'panel__icon panel__icon--clear'\r\n                    }\r\n                    icon={faTimes}\r\n                    onClick={handleClear}\r\n                />\r\n            </label>\r\n\r\n            <select\r\n                name='region'\r\n                value={selectValue}\r\n                onChange={handleSelect}\r\n                className='panel__select'\r\n            >\r\n                <option className='panel__option' value='' hidden>\r\n                    Filter by Region\r\n                </option>\r\n                <option className='panel__option' value=''>\r\n                    All\r\n                </option>\r\n                <option className='panel__option' value='Africa'>\r\n                    Africa\r\n                </option>\r\n                <option className='panel__option' value='Americas'>\r\n                    America\r\n                </option>\r\n                <option className='panel__option' value='Asia'>\r\n                    Asia\r\n                </option>\r\n                <option className='panel__option' value='Europe'>\r\n                    Europe\r\n                </option>\r\n                <option className='panel__option' value='Oceania'>\r\n                    Oceania\r\n                </option>\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Panel;\r\n","import React, { useContext, useState } from 'react';\r\nimport { AppContext } from '../store/GlobalStore';\r\n\r\nimport Card from '../components/Card';\r\nimport Panel from '../components/Panel';\r\n\r\nconst StartPage = props => {\r\n  const { isDataLoading, countries } = useContext(AppContext);\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [selectedFilter, setSelectedFilter] = useState('');\r\n\r\n  let countriesList = countries;\r\n\r\n  const handleSearchValue = e => {\r\n    const value = e.target.value;\r\n\r\n    setSearchValue(value);\r\n  };\r\n\r\n  const handleSelectedFilter = e => {\r\n    const filter = e.target.value;\r\n\r\n    setSelectedFilter(filter);\r\n  };\r\n\r\n  const handleClearInput = () => {\r\n    setSearchValue('');\r\n  };\r\n\r\n  if (selectedFilter === 'Africa') {\r\n    countriesList = countriesList.filter(country => country.region === selectedFilter);\r\n  } else if (selectedFilter === 'Americas') {\r\n    countriesList = countriesList.filter(country => country.region === selectedFilter);\r\n  } else if (selectedFilter === 'Asia') {\r\n    countriesList = countriesList.filter(country => country.region === selectedFilter);\r\n  } else if (selectedFilter === 'Europe') {\r\n    countriesList = countriesList.filter(country => country.region === selectedFilter);\r\n  } else if (selectedFilter === 'Oceania') {\r\n    countriesList = countriesList.filter(country => country.region === selectedFilter);\r\n  }\r\n\r\n  if (searchValue.length > 0) {\r\n    countriesList = countriesList.filter(\r\n      country =>\r\n        country.name.toLowerCase().match(searchValue.toLowerCase()) ||\r\n        country.capital.toLowerCase().match(searchValue.toLowerCase()),\r\n    );\r\n  }\r\n\r\n  const countriesMap = countriesList.map(country => <Card key={country.name} {...country} />);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <div className=\"container content__container\">\r\n        <Panel\r\n          inputValue={searchValue}\r\n          handleInput={handleSearchValue}\r\n          selectValue={selectedFilter}\r\n          handleSelect={handleSelectedFilter}\r\n          handleClear={handleClearInput}\r\n        />\r\n        {isDataLoading ? <p>loading...</p> : <section className=\"results\">{countriesMap}</section>}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default StartPage;\r\n","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport { AppContext } from '../store/GlobalStore';\r\n\r\nconst DetailPage = props => {\r\n  const { isDataLoading, countries } = useContext(AppContext);\r\n\r\n  let domains = [];\r\n  let currencies = [];\r\n  let languages = [];\r\n  let borders = [];\r\n\r\n  const currentCountry = countries.filter(\r\n    country => country.alpha3Code === props.match.params.code,\r\n  );\r\n\r\n  if (!isDataLoading) {\r\n    domains = currentCountry[0].topLevelDomain.join(`,`);\r\n\r\n    currencies = currentCountry[0].currencies\r\n      .map(item => `${item.name}(${item.symbol})`)\r\n      .join(', ');\r\n\r\n    languages = currentCountry[0].languages.map(item => item.name).join(', ');\r\n\r\n    borders = currentCountry[0].borders.map(border => (\r\n      <Link to={`/country/${border}`} key={border} className=\"detail__btn\">\r\n        {border}\r\n      </Link>\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <div className=\"container content__container\">\r\n        <Link to=\"/\" className=\"detail__btn detail__btn--back\">\r\n          <FontAwesomeIcon icon={faArrowLeft} /> Back\r\n        </Link>\r\n        {isDataLoading ? (\r\n          <p>loading...</p>\r\n        ) : (\r\n          <article className=\"details-wrap\">\r\n            <div className=\"details-wrap__img\">\r\n              <img src={currentCountry[0].flag} alt=\"country flag\" className=\"detail__img\" />\r\n            </div>\r\n            <div className=\"details-wrap__detail detail\">\r\n              <h2 className=\"detail__name\">{currentCountry[0].name}</h2>\r\n              <div className=\"detail__content-wrap\">\r\n                <p className=\"detail__info\">\r\n                  Native Name:\r\n                  <span className=\"detail__info-span\">{currentCountry[0].nativeName}</span>\r\n                </p>\r\n                <p className=\"detail__info\">\r\n                  Population:\r\n                  <span className=\"detail__info-span\">{currentCountry[0].population}</span>\r\n                </p>\r\n                <p className=\"detail__info\">\r\n                  Region:\r\n                  <span className=\"detail__info-span\">{currentCountry[0].region}</span>\r\n                </p>\r\n                <p className=\"detail__info\">\r\n                  Sub Region:\r\n                  <span className=\"detail__info-span\">\r\n                    {currentCountry[0].subregion.length\r\n                      ? currentCountry[0].subregion\r\n                      : \"Doesn't have\"}\r\n                  </span>\r\n                </p>\r\n                <p className=\"detail__info\">\r\n                  Capital:\r\n                  <span className=\"detail__info-span\">\r\n                    {currentCountry[0].capital.length ? currentCountry[0].capital : \"Doesn't have\"}\r\n                  </span>\r\n                </p>\r\n              </div>\r\n              <div className=\"detail__content-wrap\">\r\n                <p className=\"detail__info\">\r\n                  Top Level Domain:\r\n                  <span className=\"detail__info-span\">{domains}</span>\r\n                </p>\r\n                <p className=\"detail__info\">\r\n                  Currencies:\r\n                  <span className=\"detail__info-span\">{currencies}</span>\r\n                </p>\r\n                <p className=\"detail__info\">\r\n                  Languages:\r\n                  <span className=\"detail__info-span\">{languages}</span>\r\n                </p>\r\n              </div>\r\n              <div className=\"detail__border-wrap\">\r\n                <h3 className=\"detail__border-title\">Border Countries:</h3>\r\n                {borders.length ? (\r\n                  borders\r\n                ) : (\r\n                  <span className=\"detail__info-span detail__info-span--border\">Doesn't have</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </article>\r\n        )}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default DetailPage;\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport StartPage from '../pages/StartPage';\r\nimport DetailPage from '../pages/DetailPage';\r\n\r\nconst Content = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path='/' component={StartPage} />\r\n            <Route exact path='/country/:code' component={DetailPage} />\r\n            <Redirect to='/' />\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default Content;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMoon } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Header = () => {\r\n    const [isDarkMode, setIsDarkMode] = useState(true);\r\n\r\n    const handleDarkMode = () => {\r\n        setIsDarkMode((prevValue) => !prevValue);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isDarkMode) {\r\n            document.documentElement.setAttribute('data-theme', 'dark');\r\n        } else {\r\n            document.documentElement.setAttribute('data-theme', 'light');\r\n        }\r\n    });\r\n\r\n    return (\r\n        <header className='header'>\r\n            <div className='container header__container'>\r\n                <h1 className='header__title'>Where in the world?</h1>\r\n                <button onClick={handleDarkMode} className='header__btn'>\r\n                    <FontAwesomeIcon\r\n                        className='header__btn-icon'\r\n                        icon={faMoon}\r\n                    />\r\n                    Dark Mode\r\n                </button>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect } from 'react';\nimport GlobalStore from '../store/GlobalStore';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport Content from './Content';\nimport Header from './Header';\n\nconst App = () => {\n    useEffect(() => {\n        document.documentElement.setAttribute('data-theme', 'dark');\n    }, []);\n\n    return (\n        <GlobalStore>\n            <Header />\n            <Router>\n                <Content />\n            </Router>\n        </GlobalStore>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport './scss/index.scss';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}